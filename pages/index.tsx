import { ApolloQueryResult } from '@apollo/client';
import type { InferGetStaticPropsType } from 'next';
import Head from 'next/head';

import apolloClient from '@/lib/graphql';

import { Features } from '@/components/Features';
import { PageHero } from '@/components/PageHero';
import { Testimonials } from '@/components/Testimonials';

import { HomePageDocument, HomePageQuery, HomePageQueryVariables } from '../misuku/api';

export const getStaticProps = async () => {
  const response: ApolloQueryResult<HomePageQuery> = await apolloClient.query<
    HomePageQuery,
    HomePageQueryVariables
  >({
    query: HomePageDocument,
    variables: { slug: ' ' },
  });

  return {
    props: {
      hero: response.data.page?.hero,
      features: response.data.page?.features,
      testimonials: response.data.page?.testimonials,
    },
  };
};

const Home = ({ hero, features, testimonials }: InferGetStaticPropsType<typeof getStaticProps>) => {
  if (!hero || !features || !testimonials) {
    return;
  }
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageHero data={hero} />
      <Features data={features} />
      <Testimonials data={testimonials} />
    </div>
  );
};

export default Home;
